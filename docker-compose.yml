version: "3.3"
services:

  db:
    image: postgres:12
    volumes:
      - ./app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  redis:
    image: "redis:alpine"
    command: "redis-server --appendonly yes --port 6480"
    ports:
      - "6489:6480"
    volumes:
      - ./redis:/data
    restart: "always"

#  redis-commander:
#    depends_on:
#      - "redis"
#    image: "rediscommander/redis-commander:latest"
#    restart: "always"
#    environment:
#      - "REDIS_HOSTS=local:redis:6480"
#    ports:
#      - "8192:8081"


  pgadmin:
    image: dpage/pgadmin4
#    networks:
#      - public-network
#      - default
    ports:
      - "5050:5050"

    depends_on:
      - db
    env_file:
      - .env

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
    ports:
      - "81:80"
      - "8899:8888"
    volumes:
      - ./backend/app:/app
    environment:
      - JUPYTER=jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
      - NGINX_PORT=${NGINX_PORT}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-true}
    # command: bash -c "while true; do sleep 1; done"  # Infinite loop to keep container live doing nothing
    command: /start-reload.sh
    env_file:
      - .env


